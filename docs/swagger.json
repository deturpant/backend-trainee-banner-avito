{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/banner": {
            "get": {
                "description": "Получает список баннеров с учетом переданных параметров запроса",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить баннеры с учетом заданных параметров",
                "operationId": "get-banners",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Токен администратора",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Идентификатор особенности баннера",
                        "name": "feature_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Идентификатор тега баннера",
                        "name": "tag_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Ограничение на количество возвращаемых баннеров",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение для пагинации результатов",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список баннеров",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Banner"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении баннеров",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    }
                }
            }
        },
        "/banner/{id}": {
            "delete": {
                "description": "Удаляет баннер с указанным идентификатором",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Удалить баннер по его идентификатору",
                "operationId": "delete-banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Токен администратора",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Идентификатор баннера",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Баннер успешно удален"
                    },
                    "400": {
                        "description": "Неверный идентификатор баннера",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    },
                    "500": {
                        "description": "Ошибка при удалении баннера",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Обновляет информацию о баннере с указанным идентификатором",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Обновить информацию о баннере",
                "operationId": "update-banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Токен администратора",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Идентификатор баннера",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления баннера",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/banners.RequestUpdateBanner"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленный баннер",
                        "schema": {
                            "$ref": "#/definitions/banners.ResponseBanner"
                        }
                    },
                    "400": {
                        "description": "Неверный идентификатор баннера или неверные данные запроса",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    },
                    "404": {
                        "description": "Баннер не найден",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    },
                    "500": {
                        "description": "Ошибка при обновлении баннера",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    }
                }
            }
        },
        "/banners": {
            "post": {
                "description": "Создает новый баннер на основе переданных данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Создать новый баннер",
                "operationId": "create-banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Токен администратора",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные для создания баннера",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/banners.RequestBanner"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Созданный баннер",
                        "schema": {
                            "$ref": "#/definitions/banners.ResponseBanner"
                        }
                    },
                    "400": {
                        "description": "Ошибка при создании баннера",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    }
                }
            }
        },
        "/features": {
            "post": {
                "description": "Создает новую фичу на основе переданных данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Создать новую фияу",
                "operationId": "create-feature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Токен администратора",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные для создания фичи",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/features.RequestFeature"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Созданная фича",
                        "schema": {
                            "$ref": "#/definitions/features.ResponseFeature"
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    },
                    "500": {
                        "description": "Ошибка при создании фича",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Аутентифицирует пользователя и выдает токен доступа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Войти в систему",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "Данные для входа в систему",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.RequestUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Аутентифицированный пользователь с токеном доступа",
                        "schema": {
                            "$ref": "#/definitions/users.ResponseAuthUser"
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    },
                    "401": {
                        "description": "Неверные учетные данные",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    }
                }
            }
        },
        "/tags": {
            "post": {
                "description": "Создает новый тег на основе переданных данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Создать новый тег",
                "operationId": "create-tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Токен администратора",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные для создания тега",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tags.RequestTag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Созданный тег",
                        "schema": {
                            "$ref": "#/definitions/tags.ResponseTag"
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    },
                    "500": {
                        "description": "Ошибка при создании тега",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    }
                }
            }
        },
        "/user_banner": {
            "get": {
                "description": "Получает баннер с учетом переданных параметров запроса",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить баннер с указанными параметрами",
                "operationId": "get-banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Токен пользователя",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Идентификатор особенности баннера",
                        "name": "feature_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Идентификатор тега баннера",
                        "name": "tag_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Использовать последнюю ревизию",
                        "name": "use_last_revision",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Содержимое баннера",
                        "schema": {
                            "$ref": "#/definitions/banners.Content"
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    },
                    "404": {
                        "description": "Баннер не найден",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Создает нового пользователя на основе переданных данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Создать нового пользователя",
                "operationId": "create-user",
                "parameters": [
                    {
                        "description": "Данные для создания пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.RequestUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Созданный пользователь",
                        "schema": {
                            "$ref": "#/definitions/users.ResponseUser"
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    },
                    "500": {
                        "description": "Ошибка при создании пользователя",
                        "schema": {
                            "$ref": "#/definitions/banners.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "banners.Content": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "banners.RequestBanner": {
            "type": "object",
            "required": [
                "content",
                "feature_id",
                "is_active",
                "tag_ids"
            ],
            "properties": {
                "content": {
                    "type": "object",
                    "additionalProperties": true
                },
                "feature_id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "banners.RequestUpdateBanner": {
            "type": "object",
            "required": [
                "content",
                "feature_id",
                "is_active",
                "tag_ids"
            ],
            "properties": {
                "content": {
                    "type": "object",
                    "additionalProperties": true
                },
                "feature_id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "banners.Response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "banners.ResponseBanner": {
            "type": "object",
            "properties": {
                "banner_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "object",
                    "additionalProperties": true
                },
                "error": {
                    "type": "string"
                },
                "feature_id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "entities.Banner": {
            "type": "object",
            "properties": {
                "banner_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "object",
                    "additionalProperties": true
                },
                "created_at": {
                    "type": "string"
                },
                "feature_id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "features.RequestFeature": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "features.ResponseFeature": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "feature_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "tags.RequestTag": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "tags.ResponseTag": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "users.RequestUser": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "users.ResponseAuthUser": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "users.ResponseUser": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    }
}